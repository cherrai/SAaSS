syntax = "proto3";

option go_package = "./;protos";
package secretChat;
import "user.proto";

message InvitationCodeItem {
  string id = 1;
  int64 authorId = 2;
  message InvitationCodeAvailableRange {
    int64 count = 1;
    int64 startTime = 2;
    int64 endTime = 3;
    int64 maximumMembers = 4;
    bool e2ee = 5;
    string type = 6;
  }
  InvitationCodeAvailableRange availableRange = 3;
  string avatar = 4;
  string name = 5;
  message InvitationCodeUsage {
    int64 usedCount = 1;
    int64 totalCallTime = 2;
  }
  InvitationCodeUsage usage = 6;
  int64 createTime = 7;
}

message CreateInvitationCode {
  message Request {
    string name = 1;
    // 可选
    string avatar = 2;
    int64 count = 3;
    int64 startTime = 4;
    int64 endTime = 5;
    int64 maximumMembers = 6;
    string type = 7;
  }
  message Response { string invitationCode = 1; }
}

message AnonymousLogin {
  message Request {
    string avatar = 1;
    string nickname = 2;
    string invitationCode = 3;
  }
  message Response {
    string deviceId = 1;
    string token = 2;
    user.SSOUserInfo userInfo = 3;
    InvitationCodeItem invitationCodeInfo = 5;
  }
}

message JoinAnonymousRoom {
  message Request {
    string invitationCode = 1;
    string anonymousUserDeviceId = 2;
    string anonymousUserToken = 3;
  }
  message Response {
    string roomId = 1;
    int64 totalNumberOfJoins = 2;
    InvitationCodeItem invitationCodeInfo = 5;
  }
}

message SendMessageWithAnonymousRoom {
  message Request {
    string invitationCode = 1;
    string anonymousUserDeviceId = 2;
    string anonymousUserToken = 3;
    string apiName = 4;
    string data = 5;
  }
  message Response {}
}

message OnAnonymousMessage {
  message Request {}
  message Response {
    string roomId = 1;
    string invitationCode = 2;
    int64 authorId = 3;
    string apiName = 4;
    string data = 5;
  }
}

message GetAnonymousRoomOnlineStatus {
  message Request {
    string invitationCode = 1;
    string anonymousUserDeviceId = 2;
    string anonymousUserToken = 3;
  }
  message Response {}
}

message GetAllUsersInAnonymousRoom {
  message Request {
    string invitationCode = 1;
    string anonymousUserDeviceId = 2;
    string anonymousUserToken = 3;
  }
  message Response {
    string roomId = 1;
    int64 totalUser = 2;
    repeated user.RoomUserInfo list = 3;
  }
}
